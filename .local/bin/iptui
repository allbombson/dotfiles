#!/bin/sh

#Run as root
if [ "$(id -u)" != "0" ]; then
	echo "Non root user dectected, please enter root password."
	su -c "$0"
	exit
fi

#User Options
WPAConf=/etc/wpa_supplicant/wpa_supplicant.conf
WPAInterface=wlan0

if [ ! -f "/etc/iptui/options" ]; then
	mkdir -p /etc/iptui/
	touch /etc/iptui/options
	#Set defaults
	echo "export HIDEPASS=on" > /etc/iptui/options
fi

VERSION=v0.0.1

#Set all Options to off
ResetOptions() {
	export HIDEPASS=off
}

ResetOptions

source /etc/iptui/options

MainMenu() {
	dialog --title "iptui - $VERSION" --menu "Pick a Option" 13 60 4 "WiFi" "Add new WiFi network" "Options" "" 2> /tmp/iptui
	case $? in
		1)
			exit;;
		255)
			exit;;
		0)
			echo MainMenu > /tmp/iptui-m
			case $(cat /tmp/iptui) in
				WiFi)
					WPAScan;;
				Options)
					Options;;
			esac;;
	esac

}

PrevMenu() {
	case $? in
		1)
			$(cat /tmp/iptui-m);;
		255)
			$(cat /tmp/iptui-m);;
		123)
			$(cat /tmp/iptui-m);;
		124)
			$(cat /tmp/iptui-m);;
	esac
}

Options() {
	dialog --title "iptui - $VERSION" --checklist "Options" 13 60 4\
		"HIDEPASS" "Hides passwords during entry" $HIDEPASS 2> /tmp/iptui
	PrevMenu
	cat /tmp/iptui | sed 's/^/export /g;s/$/=on/g' > /etc/iptui/options
	ResetOptions
	source /etc/iptui/options
	MainMenu
}
WPAScan() {
	dialog --title "iptui - $VERSION" --infobox "Scanning WiFi Networks" 4 40
	wpa_cli scan &> /dev/null
	while :
	do
		if [ "$(wpa_cli scan | grep OK)" = "OK" ]; then
		#	cat ./out3 | \
			wpa_cli scan_results | \
			cut -f 3- | \
			sort | \
			awk '{sub(/^bssid.*$/,"");sub(/^Selected.*$/,"");gsub(/^\[ESS\]/,"OPEN",$2);gsub(/\[.*\]/,"PASS",$2);gsub(/^.* $/, ""); \
			gsub(/^/, "\"");gsub(/$/, "\" \"\"");if(!e[$3] && $3!="" && $3!="\"\""){print;e[$3]++}}' | \
			sed '/^"" ""$/d' | \
			xargs dialog --title "iptui - $VERSION" --menu "Select a WiFi Network" 60 60 4 2> /tmp/iptui
			PrevMenu
			export SSID="$(cat /tmp/iptui | cut -d ' ' -f 3-)"
			case $(cat /tmp/iptui | cut -d ' ' -f 2) in
				PASS)
					if [ $HIDEPASS = "on" ]; then
						export InputType="--passwordbox"
					else
						export InputType="--inputbox"
					fi
					dialog $InputType "Please enter wifi password" 8 40 2> /tmp/iptui
					wpa_passphrase "$SSID" "$(cat /tmp/iptui)" >> $WPAConf	
					wpa_cli reconfigure
					ip link set $WPAInterface down
					ip link set $WPAInterface up;;
				OPEN)
					#Shit Gets Tabbed back so that way it gets added to the config correctly
echo "network={
	ssid=\"$SSID\"
	key_mgmt=NONE
}" >> "$WPAConf"
					wpa_cli reconfigure
					ip link set $WPAInterface down
					ip link set $WPAInterface up;;
			esac
			break
		fi;
	done
}

MainMenu

